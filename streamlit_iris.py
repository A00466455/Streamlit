#importing necessary prediction libraries and pickle libraries  from sklearn.datasets import load_irisfrom sklearn.model_selection import train_test_splitfrom sklearn.metrics import accuracy_scorefrom sklearn import treefrom joblib import dump#loading iris data into a dataframe data = load_iris() #defining target columnsx = data['data']y = data['target']#splitting into training and test data setstrain_x, test_x, train_y, test_y = train_test_split(x,y,test_size=0.2, random_state=44)#creating a classifier and fitting the training datasetsclf = tree.DecisionTreeClassifier()clf = clf.fit(train_x,train_y)#predicting the test dataset using the created modelpred_y = clf.predict(test_x)#finding accuracy value for the created modelaccuracy = accuracy_score(test_y, pred_y)print("accuracy : ",accuracy)pred_y_train = clf.predict(train_x)train_accuracy = accuracy_score(train_y, pred_y_train)print("train accuracy : ",train_accuracy)print(data['target_names'][pred_y])#dumping model into a pickle filedump(clf, 'iris-prediction.joblib')